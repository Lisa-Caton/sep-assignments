
-------------------
QUESTION 1:
-------------------

+ A guest who exists in the database and has not booked a room.

    SELECT guest.first_name, guest.last_name
    FROM guest
    FULL OUTER JOIN booking ON guest.guest_ID = booking.guest_ID
    WHERE booking.room_ID IS NULL;


     first_name | last_name 
    ------------+-----------
     Sarah      | Warner
    (1 row)


+ Bookings for a guest who has booked two rooms for the same dates.

    SELECT booking.room_ID, booking.guest_ID, booking.check_in_date, booking.check_out_date, guest.first_name, guest.last_name, COUNT(*) AS booked_rooms
    FROM booking
    LEFT JOIN guest ON booking.guest_ID = guest.guest_ID
    GROUP BY booking.room_ID, booking.guest_ID, booking.check_in_date, booking.check_out_date, guest.first_name, guest.last_name
    HAVING COUNT(*) > 1;


     room_id | guest_id | check_in_date | check_out_date | first_name | last_name | booked_rooms 
    ---------+----------+---------------+----------------+------------+-----------+--------------
           2 |     2002 | 2016-02-02    | 2016-02-12     | Kelly      | Angel     |            2
    (1 row)


+ Bookings for a guest who has booked one room several times on different dates.

    SELECT guest.first_name, guest.last_name, booking.guest_ID, COUNT(*)
    FROM booking
    LEFT OUTER JOIN guest ON booking.guest_ID = guest.guest_ID
    GROUP BY guest.first_name, guest.last_name, booking.guest_ID
    HAVING COUNT(*) > 1
    ORDER BY booking.guest_ID ASC;


     first_name | last_name | guest_id | count 
    ------------+-----------+----------+-------
     Kelly      | Angel     |     2002 |     2
     Carl       | Block     |     3003 |     4


+ The number of unique guests who have booked the same room.

    SELECT DISTINCT booking.guest_ID, booking.room_ID, guest.first_name, guest.last_name, booking.check_in_date
    FROM guest
    JOIN booking ON guest.guest_ID = booking.guest_ID
    WHERE booking.room_ID > 1
    ORDER BY booking.room_ID ASC;


     guest_id | room_id | first_name | last_name | check_in_date 
    ----------+---------+------------+-----------+---------------
         2002 |       2 | Kelly      | Angel     | 2016-02-02
         3003 |       3 | Carl       | Block     | 2016-01-09
         3003 |       3 | Carl       | Block     | 2016-03-12
         3003 |       3 | Carl       | Block     | 2016-04-16
         3003 |       3 | Carl       | Block     | 2016-05-22
         4004 |       4 | Bert       | Gamble    | 2016-11-21
         5005 |       4 | Annie      | Smith     | 2016-06-24
    (7 rows)

-------------------
QUESTION 2:
-------------------

+ locate IMG in Github - ModelData-database.png

-------------------
QUESTION 3:
-------------------

+ locate IMG in Github - StudentsData-database.png


+ All students who have taken a particular class.

  SELECT students.name AS students_name, classes.name AS class_name
  FROM students
  JOIN grades ON students.ID = grades.students_ID
  JOIN classes ON grades.classes_ID = classes.ID
  WHERE classes.ID = 104;

     students_name | class_name 
    ---------------+------------
     Carol Sings   | Spanish
     Alex Jack     | Spanish
    (2 rows)

+ The number of each grade (using letter grades A-F) earned in a particular class.

  SELECT classes.name, grades.letter_grade, COUNT(*)
  FROM grades
  JOIN classes ON grades.classes_ID = classes.ID
  GROUP BY classes.name, grades.letter_grade
  HAVING grades.letter_grade = 'A' OR
  grades.letter_grade = 'B' OR
  grades.letter_grade = 'C' OR
  grades.letter_grade = 'D' OR
  grades.letter_grade = 'E' OR
  grades.letter_grade = 'F'
  ORDER BY grades.letter_grade ASC;

      name   | letter_grade | count 
    ---------+--------------+-------
     History | A            |     1
     Math    | A            |     1
     Science | A            |     1
     English | B            |     1
     French  | B            |     2
     History | B            |     1
     Science | B            |     2
     Spanish | C            |     1
     Spanish | D            |     1
     Math    | E            |     1
     Math    | F            |     1
    (11 rows)


+ Class names and the total number of students who have taken each class in the list.

  SELECT classes.name, COUNT(*)
  FROM classes
  JOIN grades ON classes.ID = grades.classes_ID
  JOIN students ON grades.students_ID = students.ID
  GROUP BY classes.name
  HAVING COUNT(*) > 1;

      name   | count 
    ---------+-------
     Math    |     3
     History |     2
     Spanish |     2
     French  |     2
     Science |     3
    (5 rows)


+ The class taken by the largest number of students.

  SELECT classes.name, COUNT(*)
  FROM classes
  JOIN grades ON classes.ID = grades.classes_ID
  JOIN students ON grades.students_ID = students.ID
  GROUP BY classes.name, students_ID;

      name   | count 
    ---------+-------
     Science |     1
     French  |     1
     Science |     1
     English |     1
     Math    |     1
     Math    |     1
     French  |     1
     Science |     1
     History |     1
     Math    |     1
     History |     1
     Spanish |     1
     Spanish |     1
    (13 rows)











